<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:mule-xml="http://www.mulesoft.org/schema/mule/xml"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core  http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.2/mule-http.xsd
        http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/3.2/mule-xml.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.2/mule-vm.xsd
       ">
    <spring:beans>
        <spring:bean id="xsdRepo"
                     class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <spring:property name="location" value="classpath:xsd-repository.properties"/>
        </spring:bean>
        <spring:bean id="xsdRepo2"
                     class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <spring:property name="location" value="classpath:xsd-repository.properties"/>
        </spring:bean>
        <spring:bean id="bean1" class="java.lang.String">
            <spring:constructor-arg type="java.lang.String" value="42"/>
        </spring:bean>
    </spring:beans>

    <http:connector name="http"/>

    <custom-transformer name="exceptionBeanToSoapFault"
                        class="org.ako.mule.filtersoapfault.ExceptionBeanToSoapFault"
                        returnClass="org.mule.api.MuleMessage"/>

    <model>
        <service name="httpProxy">
            <inbound>
                <http:inbound-endpoint exchange-pattern="request-response"
                                       address="http://localhost:8080/"
                                       responseTransformer-refs="exceptionBeanToSoapFault">
                    <logger message="Message received #[mule:message.payload(java.lang.String)]" level="INFO"/>
                    <message-properties-transformer scope="session">
                        <add-message-property key="proxy.path" value="#[header:INBOUND:http.request]"/>
                        <add-message-property key="proxy.address" value="#[groovy:message.getInboundProperty('http.request')[1..-1]]"/>
                    </message-properties-transformer>
                </http:inbound-endpoint>
            </inbound>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint path="xmlValidationProxy.in" exchange-pattern="request-response">
                        <logger message="Message passed to validation #[mule:message.payload(java.lang.String)]"
                                level="INFO"/>
                    </vm:outbound-endpoint>
                </pass-through-router>
            </outbound>
        </service>
    </model>

    <flow name="xsd-validator">
        <!--
          == Define proxy inbound endpoint
          -->
        <vm:inbound-endpoint exchange-pattern="request-response" path="xmlValidationProxy.in">
            <logger message="XSD validator - message received for #[header:SESSION:proxy.address] " level="INFO"/>
        </vm:inbound-endpoint>
        <!--
          == Send request to destination
          -->
        <!--
        <logger message="XSD validator sending message to #[bean:xsdRepo]" level="INFO"/>
        -->
        <http:outbound-endpoint connector-ref="http" address="http://#[header:SESSION:proxy.address]"
                           exchange-pattern="request-response">
            <logger message="XSD validator sending message to http://#[header:SESSION:proxy.address]" level="INFO"/>
        </http:outbound-endpoint>
        <!--
          == Validate message received from destination with xsd
          -->
        <logger message="XSD validator - validating message received from http://#[header:SESSION:proxy.address]"
                level="INFO"/>
        <logger message="XSD validator - message received: #[mule:message.payload(java.lang.String)]" level="INFO"/>
        <message-filter throwOnUnaccepted="true">
            <mule-xml:schema-validation-filter schemaLocations="${test}"/>
        </message-filter>
        <!--
          == Message is valid
          -->
        <logger message="XSD validator - validated message" level="INFO"/>
        <logger message="XSD validator - sending response: #[mule:message.payload(java.lang.String)]" level="INFO"/>
    </flow>
</mule>
